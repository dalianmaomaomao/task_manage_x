<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cj.task.mapper.ContentMapper">
    <resultMap id="BaseResultMap" type="com.cj.task.entity.Content">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="updated_at" property="updateAt" jdbcType="TIMESTAMP"/>
        <result column="state" property="state" jdbcType="BOOLEAN"/>
        <result column="msg" property="msg" jdbcType="VARCHAR"/>
        <association property="user" javaType="com.cj.task.entity.User"/>
        <association property="task" javaType="com.cj.task.entity.Task"/>
    </resultMap>
    <resultMap id="contentWithUserMap" type="com.cj.task.entity.Content"
               extends="BaseResultMap">
        <association property="user" javaType="com.cj.task.entity.User">
            <id column="user_id" property="id" jdbcType="INTEGER"/>
            <result column="user_account" property="account" jdbcType="VARCHAR"/>
            <result column="user_pwd" property="pwd" jdbcType="VARCHAR"/>
            <result column="user_nick_name" property="nickName" jdbcType="VARCHAR"/>
            <result column="user_token" property="token" jdbcType="VARCHAR"/>
            <result column="user_isadmin" property="isAdmin" jdbcType="VARCHAR"/>
        </association>
    </resultMap>
    <sql id="Base_Column_List">
        id,updated_at,state,msg,task_id,user_id
    </sql>
    <!--插入表单概要-->
    <insert id="save" parameterType="com.cj.task.entity.Content" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
        content
        (updated_at,state,user_id,task_id)
        VALUES
        (#{updateAt},#{state},#{user.id},#{task.id})
    </insert>
    <!--根据content id查找表单概要-->
    <select id="findById" resultMap="contentWithUserMap">
        SELECT
        con.id,con.updated_at,con.state,con.task_id,
        u.id AS user_id,u.account AS user_account,u.pwd AS user_pwd,u.nick_name AS user_nick_name,
        u.token AS user_token,u.isadmin AS user_isadmin
        FROM content con LEFT JOIN user u
        ON con.user_id=u.id
        WHERE con.id=#{id}
    </select>
    <!--修改表单概要信息-->
    <update id="update" parameterType="com.cj.task.entity.Content">
        UPDATE
        content
        SET
        updated_at=#{updateAt}
        WHERE
        id=#{id}
    </update>
    <!--根据ID删除表单概要-->
    <delete id="delete" parameterType="com.cj.task.entity.Content">
        delete from content
        where id=#{id}
    </delete>
</mapper>

